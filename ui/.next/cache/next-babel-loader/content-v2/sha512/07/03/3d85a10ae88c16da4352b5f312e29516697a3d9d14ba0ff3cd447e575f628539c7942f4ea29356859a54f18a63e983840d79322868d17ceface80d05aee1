{"ast":null,"code":"import { ApolloClient, ApolloLink, HttpLink, InMemoryCache } from '@apollo/client';\nexport const cache = new InMemoryCache();\n\nfunction startApollo() {\n  const DS_HOST = true ? '10n1.tikalk.dev' : 'localhost';\n  const DS_PORT = true ? '' : '4000';\n  const DS_PATH = '/graphql';\n  const httpLink = new HttpLink({\n    uri: `//${DS_HOST}:${DS_PORT}${DS_PATH}`\n  });\n  const cleanTypeName = new ApolloLink((operation, forward) => {\n    if (operation.variables) {\n      const omitTypename = (key, value) => key === '__typename' ? undefined : value; // eslint-disable-next-line no-param-reassign\n\n\n      operation.variables = JSON.parse(JSON.stringify(operation.variables), omitTypename);\n    }\n\n    return forward(operation).map(data => {\n      return data;\n    });\n  });\n  const client = new ApolloClient({\n    link: ApolloLink.from([cleanTypeName, httpLink]),\n    cache\n  });\n  return client;\n}\n\nexport default startApollo();","map":null,"metadata":{},"sourceType":"module"}