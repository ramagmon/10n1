{"ast":null,"code":"import { ApolloClient, ApolloLink, HttpLink, InMemoryCache } from '@apollo/client';\nexport var cache = new InMemoryCache();\n\nfunction startApollo() {\n  var DS_HOST = true ? '10n1.tikalk.dev' : 'localhost';\n  var DS_PORT = true ? '' : '4000';\n  var DS_PATH = '/graphql';\n  var httpLink = new HttpLink({\n    uri: \"//\".concat(DS_HOST, \":\").concat(DS_PORT).concat(DS_PATH)\n  });\n  var cleanTypeName = new ApolloLink(function (operation, forward) {\n    if (operation.variables) {\n      var omitTypename = function omitTypename(key, value) {\n        return key === '__typename' ? undefined : value;\n      }; // eslint-disable-next-line no-param-reassign\n\n\n      operation.variables = JSON.parse(JSON.stringify(operation.variables), omitTypename);\n    }\n\n    return forward(operation).map(function (data) {\n      return data;\n    });\n  });\n  var client = new ApolloClient({\n    link: ApolloLink.from([cleanTypeName, httpLink]),\n    cache: cache\n  });\n  return client;\n}\n\nexport default startApollo();","map":null,"metadata":{},"sourceType":"module"}