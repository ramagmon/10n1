{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/ranwahle/dev/10n1/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/ranwahle/dev/10n1/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable react/no-array-index-key */\nimport { useCallback, useEffect, useState } from 'react';\nimport { Badge, Col, Input, Row } from 'reactstrap';\nvar daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nvar arr = Array(47).fill(null).map(function (_, item) {\n  return item % 2 === 0 ? \"\".concat(item / 2 + 1, \":00\") : \"\".concat(Math.floor(item / 2 + 1), \":30\");\n});\n\nvar AvailabilityRow = function AvailabilityRow(_ref) {\n  var day = _ref.day,\n      days = _ref.days,\n      setDays = _ref.setDays,\n      i = _ref.i,\n      change = _ref.change,\n      defaultChecked = _ref.defaultChecked;\n\n  var _useState = useState('9:00'),\n      startTime = _useState[0],\n      setStartTime = _useState[1];\n\n  var _useState2 = useState('10:00'),\n      endTime = _useState2[0],\n      setEndTime = _useState2[1];\n\n  var _useState3 = useState(defaultChecked),\n      checked = _useState3[0],\n      setChecked = _useState3[1];\n\n  useEffect(function () {\n    change(\"day-\".concat(day, \"-\").concat(i), checked ? 'add' : 'remove', day, startTime, endTime);\n  }, [checked, startTime, endTime]);\n  useEffect(function () {\n    setEndTime(arr[arr.indexOf(startTime) + 2]);\n  }, [startTime, endTime]);\n  return /*#__PURE__*/_jsxs(Row, {\n    noGutters: true,\n    className: \"d-flex align-items-center mb-2\",\n    children: [/*#__PURE__*/_jsx(Col, {\n      md: 1,\n      className: \"d-flex align-items-center\",\n      children: /*#__PURE__*/_jsx(Input, {\n        type: \"checkbox\",\n        className: \"ml-2\",\n        checked: checked,\n        onChange: function onChange() {\n          return setChecked(!checked);\n        }\n      })\n    }), /*#__PURE__*/_jsx(Col, {\n      md: 2,\n      children: day\n    }), /*#__PURE__*/_jsxs(Col, {\n      md: 3,\n      className: \"d-flex align-items-center pl-3\",\n      children: [\"from:\", /*#__PURE__*/_jsx(Input, {\n        type: \"select\",\n        defaultValue: startTime,\n        className: \"mx-1\",\n        onChange: function onChange(e) {\n          setStartTime(e.target.value);\n        },\n        children: arr.map(function (item) {\n          return /*#__PURE__*/_jsx(\"option\", {\n            children: item\n          }, \"hours\".concat(item));\n        })\n      })]\n    }), /*#__PURE__*/_jsxs(Col, {\n      md: 3,\n      className: \"d-flex align-items-center pl-4\",\n      children: [\"to:\", /*#__PURE__*/_jsx(Input, {\n        type: \"select\",\n        value: endTime,\n        className: \"mx-1\",\n        onChange: function onChange(e) {\n          setEndTime(e.target.value);\n        },\n        children: arr.map(function (item, ind) {\n          return /*#__PURE__*/_jsx(\"option\", {\n            disabled: ind <= arr.indexOf(startTime),\n            children: item\n          }, \"hours\".concat(item));\n        })\n      })]\n    }), /*#__PURE__*/_jsx(Col, {\n      md: 3,\n      className: \"text-right\",\n      children: /*#__PURE__*/_jsx(\"a\", {\n        href: \"#/\",\n        onClick: function onClick(e) {\n          e.preventDefault();\n\n          var newDays = _toConsumableArray(days);\n\n          newDays.splice(i, 0, day);\n          setDays(newDays);\n        },\n        children: \"Add another slot >\"\n      })\n    })]\n  });\n};\n\nvar CheckedRow = function CheckedRow(_ref2) {\n  var day = _ref2.day,\n      change = _ref2.change;\n  return /*#__PURE__*/_jsxs(Badge, {\n    color: \"info\",\n    style: {\n      cursor: 'pointer'\n    },\n    onClick: function onClick() {\n      return change(day.key, 'remove', day.day, day.startTime, day.endTime);\n    },\n    className: \"mr-3\",\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      className: \"mx-2\",\n      children: \"X\"\n    }), \"\\uD83D\\uDCC5 \", day.day, \" - \", day.startTime, \" - \", day.endTime]\n  });\n};\n\nvar AvailabilitySelector = function AvailabilitySelector(_ref3) {\n  var onChange = _ref3.onChange,\n      values = _ref3.values;\n\n  var _useState4 = useState(daysOfWeek),\n      days = _useState4[0],\n      setDays = _useState4[1];\n\n  var _useState5 = useState({}),\n      selected = _useState5[0],\n      setSelected = _useState5[1];\n\n  var change = useCallback(function (key, method, day, startTime, endTime) {\n    var newVal = {\n      day: day,\n      startTime: startTime,\n      endTime: endTime,\n      key: key\n    };\n\n    var selectedCopy = _objectSpread({}, selected);\n\n    if (method === 'add') {\n      selectedCopy[key] = newVal;\n    } else {\n      delete selectedCopy[key];\n    }\n\n    setSelected(selectedCopy);\n    onChange(Object.values(selectedCopy));\n  }, [selected]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [days.map(function (day, i) {\n      return /*#__PURE__*/_jsx(AvailabilityRow, {\n        day: day,\n        days: days,\n        setDays: setDays,\n        i: i,\n        change: change\n      }, \"day-\".concat(day, \"-\").concat(i));\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        className: \"font-weight-bold\",\n        children: \"Selected slots:\"\n      }), values.map(function (val, i) {\n        return /*#__PURE__*/_jsx(CheckedRow, {\n          day: val,\n          change: change\n        }, \"Checkeday-\".concat(val.day, \"-\").concat(i));\n      })]\n    })]\n  });\n};\n\nexport default AvailabilitySelector;","map":null,"metadata":{},"sourceType":"module"}