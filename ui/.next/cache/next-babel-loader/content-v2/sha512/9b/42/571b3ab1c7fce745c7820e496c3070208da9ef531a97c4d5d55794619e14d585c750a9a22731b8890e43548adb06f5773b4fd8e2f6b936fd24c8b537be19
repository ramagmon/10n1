{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport { ApolloProvider } from '@apollo/client';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\nimport { useEffect } from 'react';\nimport client from '../apollo-client';\nimport { AuthProvider } from '../hooks/useAuth';\nimport '../assets/css/now-ui-kit.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nSentry.init({\n  dsn: 'https://baf201991dd4488282eaa3c505cfa1e2@o575983.ingest.sentry.io/5730638',\n  integrations: [new Integrations.BrowserTracing()],\n  tracesSampleRate: 1.0\n});\nexport default function App({\n  Component,\n  pageProps\n}) {\n  useEffect(() => {\n    const protocol = false && window.location.protocol ? window.location.protocol : '';\n    const hostname = false && window.location.hostname ? window.location.hostname : '';\n\n    if (true && (protocol !== 'https:' || hostname !== '10n1.tikalk.dev')) {\n      window.location.assign(`https://10n1.tikalk.dev`);\n    }\n  }, []);\n  return /*#__PURE__*/_jsx(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsx(AuthProvider, {\n      children: /*#__PURE__*/_jsx(Component, _objectSpread({}, pageProps))\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}