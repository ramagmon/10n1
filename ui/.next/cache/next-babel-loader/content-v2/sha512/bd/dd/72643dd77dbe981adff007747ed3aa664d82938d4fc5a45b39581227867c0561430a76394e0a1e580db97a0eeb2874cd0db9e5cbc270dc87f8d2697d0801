{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ranwahle/dev/10n1/ui/hooks/useAuth.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createContext, useCallback, useContext, useRef, useState } from 'react';\nimport { useGoogleLogin, useGoogleLogout } from 'react-google-login';\nimport { Container, Spinner } from 'reactstrap';\nimport http from 'axios';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/client';\nimport client from '../apollo-client';\nimport { GET_EXPERT_BY_EMAIL } from '../graphql/queries';\nimport { CREATE_EXPERT } from '../graphql/mutations';\nexport const AuthContext = /*#__PURE__*/createContext({});\nconst googleClientId = '158154804757-5oja12b2flilb717ndvrdct3or8uqjqi.apps.googleusercontent.com';\nexport const AuthProvider = ({\n  children\n}) => {\n  var _userDataRef$current16;\n\n  const [createExpert] = useMutation(CREATE_EXPERT);\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false);\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(true);\n  const userDataRef = useRef({});\n  const router = useRouter();\n\n  const onSuccess = async response => {\n    var _response$tokenObj, _userDataRef$current, _userDataRef$current2, _userDataRef$current8, _userDataRef$current9, _userDataRef$current10, _userDataRef$current11, _userDataRef$current12, _userDataRef$current13, _userDataRef$current14;\n\n    setIsLoading(true);\n    setIsLoggedIn(true);\n    userDataRef.current = _objectSpread(_objectSpread({}, userDataRef.current), {}, {\n      name: response.profileObj.name,\n      email: response.profileObj.email,\n      image: response.profileObj.imageUrl\n    });\n\n    if (response !== null && response !== void 0 && (_response$tokenObj = response.tokenObj) !== null && _response$tokenObj !== void 0 && _response$tokenObj.access_token && !(userDataRef !== null && userDataRef !== void 0 && (_userDataRef$current = userDataRef.current) !== null && _userDataRef$current !== void 0 && _userDataRef$current.phone)) {\n      var _response$tokenObj2, _data$phoneNumbers, _data$phoneNumbers$;\n\n      const {\n        data\n      } = await http.get('https://people.googleapis.com/v1/people/me?personFields=phoneNumbers', {\n        headers: {\n          Authorization: `Bearer ${response === null || response === void 0 ? void 0 : (_response$tokenObj2 = response.tokenObj) === null || _response$tokenObj2 === void 0 ? void 0 : _response$tokenObj2.access_token}`\n        }\n      });\n\n      if (data !== null && data !== void 0 && (_data$phoneNumbers = data.phoneNumbers) !== null && _data$phoneNumbers !== void 0 && (_data$phoneNumbers$ = _data$phoneNumbers[0]) !== null && _data$phoneNumbers$ !== void 0 && _data$phoneNumbers$.value) {\n        var _data$phoneNumbers$2;\n\n        userDataRef.current = _objectSpread(_objectSpread({}, userDataRef.current), {}, {\n          phone: (data === null || data === void 0 ? void 0 : (_data$phoneNumbers$2 = data.phoneNumbers[0]) === null || _data$phoneNumbers$2 === void 0 ? void 0 : _data$phoneNumbers$2.value) || null\n        });\n      }\n    }\n\n    if ((_userDataRef$current2 = userDataRef.current) !== null && _userDataRef$current2 !== void 0 && _userDataRef$current2.email) {\n      var _userDataRef$current3;\n\n      const {\n        data\n      } = await client.query({\n        query: GET_EXPERT_BY_EMAIL,\n        variables: {\n          email: (_userDataRef$current3 = userDataRef.current) === null || _userDataRef$current3 === void 0 ? void 0 : _userDataRef$current3.email\n        }\n      });\n\n      if (data !== null && data !== void 0 && data.expert) {\n        userDataRef.current = _objectSpread(_objectSpread({}, userDataRef.current), data.expert);\n      } else {\n        var _userDataRef$current4, _userDataRef$current5, _userDataRef$current6, _userDataRef$current7;\n\n        await createExpert({\n          variables: {\n            input: {\n              name: ((_userDataRef$current4 = userDataRef.current) === null || _userDataRef$current4 === void 0 ? void 0 : _userDataRef$current4.name) || '',\n              phone: ((_userDataRef$current5 = userDataRef.current) === null || _userDataRef$current5 === void 0 ? void 0 : _userDataRef$current5.phone) || '',\n              email: ((_userDataRef$current6 = userDataRef.current) === null || _userDataRef$current6 === void 0 ? void 0 : _userDataRef$current6.email) || '',\n              image: ((_userDataRef$current7 = userDataRef.current) === null || _userDataRef$current7 === void 0 ? void 0 : _userDataRef$current7.image) || ''\n            }\n          }\n        });\n      }\n    }\n\n    if (!((_userDataRef$current8 = userDataRef.current) !== null && _userDataRef$current8 !== void 0 && (_userDataRef$current9 = _userDataRef$current8.slackData) !== null && _userDataRef$current9 !== void 0 && _userDataRef$current9.accessToken)) {\n      router.push('/registration/step2');\n    } else if (!(userDataRef !== null && userDataRef !== void 0 && (_userDataRef$current10 = userDataRef.current) !== null && _userDataRef$current10 !== void 0 && (_userDataRef$current11 = _userDataRef$current10.expertise) !== null && _userDataRef$current11 !== void 0 && _userDataRef$current11.length)) {\n      router.push('/registration/step3');\n    } else if (!(userDataRef !== null && userDataRef !== void 0 && (_userDataRef$current12 = userDataRef.current) !== null && _userDataRef$current12 !== void 0 && (_userDataRef$current13 = _userDataRef$current12.availability) !== null && _userDataRef$current13 !== void 0 && _userDataRef$current13.length)) {\n      router.push('/registration/step4');\n    } else if (!(userDataRef !== null && userDataRef !== void 0 && (_userDataRef$current14 = userDataRef.current) !== null && _userDataRef$current14 !== void 0 && _userDataRef$current14.bio)) {\n      router.push('/registration/step5');\n    }\n\n    setIsLoading(false);\n  };\n\n  const onLogout = async () => {\n    setIsLoading(false);\n    userDataRef.current = {};\n    await router.push('/');\n    await router.reload();\n  };\n\n  const onFailure = async () => {\n    setIsLoading(false);\n  };\n\n  const onAutoLoadFinished = async connected => {\n    console.warn({\n      connected\n    });\n\n    if (!connected) {\n      setIsLoading(false);\n    }\n  };\n\n  const refetch = useCallback(async () => {\n    var _userDataRef$current15;\n\n    const {\n      data\n    } = await client.query({\n      query: GET_EXPERT_BY_EMAIL,\n      variables: {\n        email: (_userDataRef$current15 = userDataRef.current) === null || _userDataRef$current15 === void 0 ? void 0 : _userDataRef$current15.email\n      }\n    });\n\n    if (data !== null && data !== void 0 && data.expert) {\n      userDataRef.current = _objectSpread(_objectSpread({}, userDataRef.current), data.expert);\n    }\n\n    return data === null || data === void 0 ? void 0 : data.expert;\n  }, [userDataRef.current]);\n  const {\n    signIn\n  } = useGoogleLogin({\n    // @ts-ignore\n    onSuccess,\n    onFailure,\n    onAutoLoadFinished,\n    clientId: googleClientId,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    scope: 'https://www.googleapis.com/auth/user.phonenumbers.read',\n    redirectUri: false ? 'https://10n1.tikalk.dev/registration/step2' : 'http://localhost:3000/registration/step2'\n  });\n  const {\n    signOut\n  } = useGoogleLogout({\n    onLogoutSuccess: onLogout,\n    clientId: googleClientId,\n    cookiePolicy: 'single_host_origin'\n  });\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn,\n      userData: (_userDataRef$current16 = userDataRef.current) !== null && _userDataRef$current16 !== void 0 ? _userDataRef$current16 : {},\n      login: signIn,\n      logout: signOut,\n      isLoading,\n      refetch\n    },\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex align-items-center justify-content-center vh-100\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        size: \"lg\",\n        color: \"warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this) : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\nexport const useAuth = () => useContext(AuthContext);\nexport default useAuth;","map":{"version":3,"sources":["/Users/ranwahle/dev/10n1/ui/hooks/useAuth.tsx"],"names":["createContext","useCallback","useContext","useRef","useState","useGoogleLogin","useGoogleLogout","Container","Spinner","http","useRouter","useMutation","client","GET_EXPERT_BY_EMAIL","CREATE_EXPERT","AuthContext","googleClientId","AuthProvider","children","createExpert","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","userDataRef","router","onSuccess","response","current","name","profileObj","email","image","imageUrl","tokenObj","access_token","phone","data","get","headers","Authorization","phoneNumbers","value","query","variables","expert","input","slackData","accessToken","push","expertise","length","availability","bio","onLogout","reload","onFailure","onAutoLoadFinished","connected","console","warn","refetch","signIn","clientId","cookiePolicy","isSignedIn","scope","redirectUri","signOut","onLogoutSuccess","userData","login","logout","useAuth"],"mappings":"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","sourcesContent":["import {\n  createContext,\n  useCallback,\n  useContext,\n  useRef,\n  useState,\n} from 'react';\nimport { useGoogleLogin, useGoogleLogout } from 'react-google-login';\nimport { Container, Spinner } from 'reactstrap';\nimport http from 'axios';\nimport { useRouter } from 'next/router';\nimport { useMutation } from '@apollo/client';\nimport client from '../apollo-client';\nimport { GET_EXPERT_BY_EMAIL } from '../graphql/queries';\nimport { CREATE_EXPERT } from '../graphql/mutations';\n\nexport const AuthContext = createContext({});\n\nconst googleClientId =\n  '158154804757-5oja12b2flilb717ndvrdct3or8uqjqi.apps.googleusercontent.com';\n\nexport const AuthProvider = ({ children }: any) => {\n  const [createExpert] = useMutation(CREATE_EXPERT);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const userDataRef: any = useRef({});\n  const router = useRouter();\n\n  const onSuccess = async (response) => {\n    setIsLoading(true);\n    setIsLoggedIn(true);\n    userDataRef.current = {\n      ...userDataRef.current,\n      name: response.profileObj.name,\n      email: response.profileObj.email,\n      image: response.profileObj.imageUrl,\n    };\n\n    if (response?.tokenObj?.access_token && !userDataRef?.current?.phone) {\n      const { data } = await http.get(\n        'https://people.googleapis.com/v1/people/me?personFields=phoneNumbers',\n        {\n          headers: {\n            Authorization: `Bearer ${response?.tokenObj?.access_token}`,\n          },\n        },\n      );\n      if (data?.phoneNumbers?.[0]?.value) {\n        userDataRef.current = {\n          ...userDataRef.current,\n          phone: data?.phoneNumbers[0]?.value || null,\n        };\n      }\n    }\n\n    if (userDataRef.current?.email) {\n      const { data } = await client.query({\n        query: GET_EXPERT_BY_EMAIL,\n        variables: { email: userDataRef.current?.email },\n      });\n      if (data?.expert) {\n        userDataRef.current = { ...userDataRef.current, ...data.expert };\n      } else {\n        await createExpert({\n          variables: {\n            input: {\n              name: userDataRef.current?.name || '',\n              phone: userDataRef.current?.phone || '',\n              email: userDataRef.current?.email || '',\n              image: userDataRef.current?.image || '',\n            },\n          },\n        });\n      }\n    }\n\n    if (!userDataRef.current?.slackData?.accessToken) {\n      router.push('/registration/step2');\n    } else if (!userDataRef?.current?.expertise?.length) {\n      router.push('/registration/step3');\n    } else if (!userDataRef?.current?.availability?.length) {\n      router.push('/registration/step4');\n    } else if (!userDataRef?.current?.bio) {\n      router.push('/registration/step5');\n    }\n    setIsLoading(false);\n  };\n\n  const onLogout = async () => {\n    setIsLoading(false);\n    userDataRef.current = {};\n    await router.push('/');\n    await router.reload();\n  };\n\n  const onFailure = async () => {\n    setIsLoading(false);\n  };\n\n  const onAutoLoadFinished = async (connected) => {\n    console.warn({ connected });\n    if (!connected) {\n      setIsLoading(false);\n    }\n  };\n\n  const refetch = useCallback(async () => {\n    const { data } = await client.query({\n      query: GET_EXPERT_BY_EMAIL,\n      variables: { email: userDataRef.current?.email },\n    });\n    if (data?.expert) {\n      userDataRef.current = { ...userDataRef.current, ...data.expert };\n    }\n    return data?.expert;\n  }, [userDataRef.current]);\n\n  const { signIn } = useGoogleLogin({\n    // @ts-ignore\n    onSuccess,\n    onFailure,\n    onAutoLoadFinished,\n    clientId: googleClientId,\n    cookiePolicy: 'single_host_origin',\n    isSignedIn: true,\n    scope: 'https://www.googleapis.com/auth/user.phonenumbers.read',\n    redirectUri:\n      process.env.NODE_ENV === 'production'\n        ? 'https://10n1.tikalk.dev/registration/step2'\n        : 'http://localhost:3000/registration/step2',\n  });\n\n  const { signOut } = useGoogleLogout({\n    onLogoutSuccess: onLogout,\n    clientId: googleClientId,\n    cookiePolicy: 'single_host_origin',\n  });\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn,\n        userData: userDataRef.current ?? {},\n        login: signIn,\n        logout: signOut,\n        isLoading,\n        refetch,\n      }}\n    >\n      {isLoading ? (\n        <Container className=\"d-flex align-items-center justify-content-center vh-100\">\n          <Spinner size=\"lg\" color=\"warning\" />\n        </Container>\n      ) : (\n        children\n      )}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth: any = () => useContext(AuthContext);\n\nexport default useAuth;\n"]},"metadata":{},"sourceType":"module"}