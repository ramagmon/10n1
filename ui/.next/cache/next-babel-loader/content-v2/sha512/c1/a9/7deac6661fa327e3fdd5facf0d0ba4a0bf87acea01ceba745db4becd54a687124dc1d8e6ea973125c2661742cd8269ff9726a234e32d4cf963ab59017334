{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/ranwahle/dev/10n1/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/ranwahle/dev/10n1/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/ranwahle/dev/10n1/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ranwahle/dev/10n1/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ranwahle/dev/10n1/ui/pages/registration/step3.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\n/* eslint-disable react/no-unescaped-entities */\nimport { Button, Card, CardBody, CardHeader, Col, Container, Row } from 'reactstrap';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport * as Yup from 'yup';\nimport { useMutation } from '@apollo/client';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { useCallback, useEffect, useState } from 'react';\nimport { TagCloud } from 'react-tagcloud';\nimport Header from '../../components/Header';\nimport { UPDATE_EXPERT } from '../../graphql/mutations';\nimport useAuth from '../../hooks/useAuth';\nvar RegistrationSchema = Yup.object().shape({\n  expertise: Yup.array().min(1).required()\n});\n\nvar Step3 = function Step3() {\n  _s();\n\n  var _userData$expertise, _formik$values$expert, _formik$values, _formik$errors, _formik$values2, _formik$values2$exper, _formik$values3, _formik$values3$exper;\n\n  var _useAuth = useAuth(),\n      userData = _useAuth.userData,\n      refetch = _useAuth.refetch;\n\n  var router = useRouter();\n\n  var _useState = useState([]),\n      options = _useState[0],\n      setOptions = _useState[1];\n\n  var _useMutation = useMutation(UPDATE_EXPERT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateExpert = _useMutation2[0];\n\n  var formik = useFormik({\n    initialValues: {\n      expertise: (_userData$expertise = userData === null || userData === void 0 ? void 0 : userData.expertise) !== null && _userData$expertise !== void 0 ? _userData$expertise : []\n    },\n    enableReinitialize: true,\n    validationSchema: RegistrationSchema,\n    onSubmit: function onSubmit() {}\n  });\n  var submit = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return updateExpert({\n              variables: {\n                input: {\n                  email: userData === null || userData === void 0 ? void 0 : userData.email,\n                  expertise: _toConsumableArray(formik.values.expertise.map(function (theme) {\n                    return typeof theme === 'object' ? _.pick(theme, ['name']) : {\n                      name: theme\n                    };\n                  }))\n                }\n              }\n            });\n\n          case 2:\n            _context.next = 4;\n            return refetch();\n\n          case 4:\n            router.push('/registration/step4');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [formik.values, userData]);\n  useEffect(function () {\n    fetch('/api/radar').then(function (res) {\n      return res.json();\n    }).then(function (resData) {\n      var techs = [];\n      resData.forEach(function (tech, idx) {\n        if (idx) {\n          techs.push(tech[0] || '');\n        }\n      });\n      setOptions(_.uniq(techs));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Tikal 10n1 step3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              className: \"pt-2 px-3\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Registration Step III - Choose your expertise\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please select from the list of expertise the technologies you fell comfortable to help others with. If one of the tech's is missing type the name of the tech and click \\\"New selection\\\"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                id: \"expertise\",\n                name: \"expertise\",\n                labelKey: \"name\",\n                size: \"large\",\n                multiple: true,\n                allowNew: true,\n                onChange: function onChange(value) {\n                  formik.setFieldValue('expertise', value);\n                },\n                options: options,\n                placeholder: \"Choose expertise, You can choose several expertise...\",\n                selected: (_formik$values$expert = formik === null || formik === void 0 ? void 0 : (_formik$values = formik.values) === null || _formik$values === void 0 ? void 0 : _formik$values.expertise) !== null && _formik$values$expert !== void 0 ? _formik$values$expert : [].map(function (expertise) {\n                  return expertise.name;\n                }),\n                className: (_formik$errors = formik.errors) !== null && _formik$errors !== void 0 && _formik$errors.expertise && formik.touched.expertise ? 'border-danger border rounded' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, _this), (formik === null || formik === void 0 ? void 0 : (_formik$values2 = formik.values) === null || _formik$values2 === void 0 ? void 0 : (_formik$values2$exper = _formik$values2.expertise) === null || _formik$values2$exper === void 0 ? void 0 : _formik$values2$exper.length) === 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"Please select at least one expertise in order to proceed.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"lg\",\n                color: \"primary\",\n                disabled: (formik === null || formik === void 0 ? void 0 : (_formik$values3 = formik.values) === null || _formik$values3 === void 0 ? void 0 : (_formik$values3$exper = _formik$values3.expertise) === null || _formik$values3$exper === void 0 ? void 0 : _formik$values3$exper.length) === 0,\n                onClick: submit,\n                children: \"Next Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/superHero3.png\",\n            alt: \"Be a 10n1 Super hero\",\n            style: {\n              maxWidth: '75%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(TagCloud, {\n            minSize: 14,\n            maxSize: 60,\n            tags: [],\n            onClick: function onClick(tag) {\n              return alert(tag);\n            } // setSelectedFilters({\n            //   ...selectedFilters,\n            //   themes: tag.value,\n            // })\n            ,\n            shuffle: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(Step3, \"uetPhZAHCFtPQtDC4jEMzRQPud0=\", false, function () {\n  return [useAuth, useRouter, useMutation, useFormik];\n});\n\n_c = Step3;\nexport default Step3;\n\nvar _c;\n\n$RefreshReg$(_c, \"Step3\");","map":{"version":3,"sources":["/Users/ranwahle/dev/10n1/ui/pages/registration/step3.tsx"],"names":["Button","Card","CardBody","CardHeader","Col","Container","Row","useRouter","useFormik","_","Yup","useMutation","Typeahead","useCallback","useEffect","useState","TagCloud","Header","UPDATE_EXPERT","useAuth","RegistrationSchema","object","shape","expertise","array","min","required","Step3","userData","refetch","router","options","setOptions","updateExpert","formik","initialValues","enableReinitialize","validationSchema","onSubmit","submit","variables","input","email","values","map","theme","pick","name","push","fetch","then","res","json","resData","techs","forEach","tech","idx","uniq","value","setFieldValue","errors","touched","length","maxWidth","tag","alert"],"mappings":";;;;;;;;;;;AAAA;AACA,SACEA,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,UAJF,EAKEC,GALF,EAMEC,SANF,EAOEC,GAPF,QAQO,YARP;AASA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,aAAT,QAA8B,yBAA9B;AACA,OAAOC,OAAP,MAAoB,qBAApB;AAEA,IAAMC,kBAAkB,GAAGV,GAAG,CAACW,MAAJ,GAAaC,KAAb,CAAmB;AAC5CC,EAAAA,SAAS,EAAEb,GAAG,CAACc,KAAJ,GAAYC,GAAZ,CAAgB,CAAhB,EAAmBC,QAAnB;AADiC,CAAnB,CAA3B;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA;;AAAA,iBACYR,OAAO,EADnB;AAAA,MACVS,QADU,YACVA,QADU;AAAA,MACAC,OADA,YACAA,OADA;;AAElB,MAAMC,MAAW,GAAGvB,SAAS,EAA7B;;AAFkB,kBAGYQ,QAAQ,CAAC,EAAD,CAHpB;AAAA,MAGXgB,OAHW;AAAA,MAGFC,UAHE;;AAAA,qBAIKrB,WAAW,CAACO,aAAD,CAJhB;AAAA;AAAA,MAIXe,YAJW;;AAMlB,MAAMC,MAAM,GAAG1B,SAAS,CAAC;AACvB2B,IAAAA,aAAa,EAAE;AACbZ,MAAAA,SAAS,yBAAEK,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEL,SAAZ,qEAAyB;AADrB,KADQ;AAIvBa,IAAAA,kBAAkB,EAAE,IAJG;AAKvBC,IAAAA,gBAAgB,EAAEjB,kBALK;AAMvBkB,IAAAA,QAAQ,EAAE,oBAAM,CAAE;AANK,GAAD,CAAxB;AASA,MAAMC,MAAM,GAAG1B,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACnBoB,YAAY,CAAC;AACjBO,cAAAA,SAAS,EAAE;AACTC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,KAAK,EAAEd,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEc,KADZ;AAELnB,kBAAAA,SAAS,qBACJW,MAAM,CAACS,MAAP,CAAcpB,SAAd,CAAwBqB,GAAxB,CAA4B,UAACC,KAAD;AAAA,2BAC7B,OAAOA,KAAP,KAAiB,QAAjB,GACIpC,CAAC,CAACqC,IAAF,CAAOD,KAAP,EAAc,CAAC,MAAD,CAAd,CADJ,GAEI;AAAEE,sBAAAA,IAAI,EAAEF;AAAR,qBAHyB;AAAA,mBAA5B,CADI;AAFJ;AADE;AADM,aAAD,CADO;;AAAA;AAAA;AAAA,mBAenBhB,OAAO,EAfY;;AAAA;AAgBzBC,YAAAA,MAAM,CAACkB,IAAP,CAAY,qBAAZ;;AAhByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,IAiBvB,CAACd,MAAM,CAACS,MAAR,EAAgBf,QAAhB,CAjBuB,CAA1B;AAmBAd,EAAAA,SAAS,CAAC,YAAM;AACdmC,IAAAA,KAAK,CAAC,YAAD,CAAL,CACGC,IADH,CACQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACG,OAAD,EAAa;AACjB,UAAMC,KAAK,GAAG,EAAd;AACAD,MAAAA,OAAO,CAACE,OAAR,CAAgB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC7B,YAAIA,GAAJ,EAAS;AACPH,UAAAA,KAAK,CAACN,IAAN,CAAWQ,IAAI,CAAC,CAAD,CAAJ,IAAW,EAAtB;AACD;AACF,OAJD;AAKAxB,MAAAA,UAAU,CAACvB,CAAC,CAACiD,IAAF,CAAOJ,KAAP,CAAD,CAAV;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,SAAD;AAAA,8BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,KAAhB;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,WAAtB;AAAA,qCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE,QAAC,QAAD;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAME,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,WADL;AAEE,gBAAA,IAAI,EAAC,WAFP;AAGE,gBAAA,QAAQ,EAAC,MAHX;AAIE,gBAAA,IAAI,EAAC,OAJP;AAKE,gBAAA,QAAQ,MALV;AAME,gBAAA,QAAQ,MANV;AAOE,gBAAA,QAAQ,EAAE,kBAACK,KAAD,EAAW;AACnBzB,kBAAAA,MAAM,CAAC0B,aAAP,CAAqB,WAArB,EAAkCD,KAAlC;AACD,iBATH;AAUE,gBAAA,OAAO,EAAE5B,OAVX;AAWE,gBAAA,WAAW,EAAC,uDAXd;AAYE,gBAAA,QAAQ,2BACNG,MADM,aACNA,MADM,yCACNA,MAAM,CAAES,MADF,mDACN,eAAgBpB,SADV,yEAEN,GAAGqB,GAAH,CAAO,UAACrB,SAAD;AAAA,yBAAeA,SAAS,CAACwB,IAAzB;AAAA,iBAAP,CAdJ;AAgBE,gBAAA,SAAS,EACP,kBAAAb,MAAM,CAAC2B,MAAP,0DAAetC,SAAf,IAA4BW,MAAM,CAAC4B,OAAP,CAAevC,SAA3C,GACI,8BADJ,GAEI;AAnBR;AAAA;AAAA;AAAA;AAAA,uBANF,eA4BE;AAAA;AAAA;AAAA;AAAA,uBA5BF,EA6BG,CAAAW,MAAM,SAAN,IAAAA,MAAM,WAAN,+BAAAA,MAAM,CAAES,MAAR,6FAAgBpB,SAAhB,gFAA2BwC,MAA3B,MAAsC,CAAtC,iBACC;AAAM,gBAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA9BJ,eAkCE;AAAA;AAAA;AAAA;AAAA,uBAlCF,eAmCE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAC,IADP;AAEE,gBAAA,KAAK,EAAC,SAFR;AAGE,gBAAA,QAAQ,EAAE,CAAA7B,MAAM,SAAN,IAAAA,MAAM,WAAN,+BAAAA,MAAM,CAAES,MAAR,6FAAgBpB,SAAhB,gFAA2BwC,MAA3B,MAAsC,CAHlD;AAIE,gBAAA,OAAO,EAAExB,MAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAoDE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,SAAS,EAAC,aAAtB;AAAA,iCACE;AACE,YAAA,GAAG,EAAC,iBADN;AAEE,YAAA,GAAG,EAAC,sBAFN;AAGE,YAAA,KAAK,EAAE;AAAEyB,cAAAA,QAAQ,EAAE;AAAZ;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBApDF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eA6DE,QAAC,GAAD;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,QAAD;AACE,YAAA,OAAO,EAAE,EADX;AAEE,YAAA,OAAO,EAAE,EAFX;AAGE,YAAA,IAAI,EAAE,EAHR;AAIE,YAAA,OAAO,EACL,iBAACC,GAAD;AAAA,qBAASC,KAAK,CAACD,GAAD,CAAd;AAAA,aADK,CAEL;AACA;AACA;AACA;AATJ;AAWE,YAAA,OAAO;AAXT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eA7DF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA,kBADF;AAoFD,CApID;;GAAMtC,K;UAC0BR,O,EACVZ,S,EAEGI,W,EAERH,S;;;KANXmB,K;AAsIN,eAAeA,KAAf","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Container,\n  Row,\n} from 'reactstrap';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport _ from 'lodash';\nimport * as Yup from 'yup';\nimport { useMutation } from '@apollo/client';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { useCallback, useEffect, useState } from 'react';\nimport { TagCloud } from 'react-tagcloud';\nimport Header from '../../components/Header';\nimport { UPDATE_EXPERT } from '../../graphql/mutations';\nimport useAuth from '../../hooks/useAuth';\n\nconst RegistrationSchema = Yup.object().shape({\n  expertise: Yup.array().min(1).required(),\n});\n\nconst Step3 = () => {\n  const { userData, refetch } = useAuth();\n  const router: any = useRouter();\n  const [options, setOptions] = useState([]);\n  const [updateExpert] = useMutation(UPDATE_EXPERT);\n\n  const formik = useFormik({\n    initialValues: {\n      expertise: userData?.expertise ?? [],\n    },\n    enableReinitialize: true,\n    validationSchema: RegistrationSchema,\n    onSubmit: () => {},\n  });\n\n  const submit = useCallback(async () => {\n    await updateExpert({\n      variables: {\n        input: {\n          email: userData?.email,\n          expertise: [\n            ...formik.values.expertise.map((theme) =>\n              typeof theme === 'object'\n                ? _.pick(theme, ['name'])\n                : { name: theme },\n            ),\n          ],\n        },\n      },\n    });\n    await refetch();\n    router.push('/registration/step4');\n  }, [formik.values, userData]);\n\n  useEffect(() => {\n    fetch('/api/radar')\n      .then((res) => res.json())\n      .then((resData) => {\n        const techs = [];\n        resData.forEach((tech, idx) => {\n          if (idx) {\n            techs.push(tech[0] || '');\n          }\n        });\n        setOptions(_.uniq(techs));\n      });\n  }, []);\n\n  return (\n    <>\n      <Header title=\"Tikal 10n1 step3\" />\n      <Container>\n        <Row>\n          <Col md={8}>\n            <Card className=\"p-4\">\n              <CardHeader className=\"pt-2 px-3\">\n                <h2>Registration Step III - Choose your expertise</h2>\n              </CardHeader>\n              <CardBody>\n                <p>\n                  Please select from the list of expertise the technologies you\n                  fell comfortable to help others with. If one of the tech's is\n                  missing type the name of the tech and click \"New selection\"\n                </p>\n                <Typeahead\n                  id=\"expertise\"\n                  name=\"expertise\"\n                  labelKey=\"name\"\n                  size=\"large\"\n                  multiple\n                  allowNew\n                  onChange={(value) => {\n                    formik.setFieldValue('expertise', value);\n                  }}\n                  options={options}\n                  placeholder=\"Choose expertise, You can choose several expertise...\"\n                  selected={\n                    formik?.values?.expertise ??\n                    [].map((expertise) => expertise.name)\n                  }\n                  className={\n                    formik.errors?.expertise && formik.touched.expertise\n                      ? 'border-danger border rounded'\n                      : ''\n                  }\n                />\n                <br />\n                {formik?.values?.expertise?.length === 0 && (\n                  <span className=\"text-danger\">\n                    Please select at least one expertise in order to proceed.\n                  </span>\n                )}\n                <br />\n                <Button\n                  size=\"lg\"\n                  color=\"primary\"\n                  disabled={formik?.values?.expertise?.length === 0}\n                  onClick={submit}\n                >\n                  Next Step\n                </Button>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col md={4} className=\"text-center\">\n            <img\n              src=\"/superHero3.png\"\n              alt=\"Be a 10n1 Super hero\"\n              style={{ maxWidth: '75%' }}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <TagCloud\n              minSize={14}\n              maxSize={60}\n              tags={[]}\n              onClick={\n                (tag) => alert(tag)\n                // setSelectedFilters({\n                //   ...selectedFilters,\n                //   themes: tag.value,\n                // })\n              }\n              shuffle\n            />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default Step3;\n"]},"metadata":{},"sourceType":"module"}