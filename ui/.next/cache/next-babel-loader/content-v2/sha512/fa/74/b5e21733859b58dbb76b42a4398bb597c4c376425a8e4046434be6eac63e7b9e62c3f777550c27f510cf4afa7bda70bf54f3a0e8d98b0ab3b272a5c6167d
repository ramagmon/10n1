{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/ranwahle/tests/10n1/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/ranwahle/tests/10n1/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/ranwahle/tests/10n1/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ranwahle/tests/10n1/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { Button, Card, CardBody, CardHeader, Col, Container, Row } from 'reactstrap';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useMutation } from '@apollo/client';\nimport { useCallback } from 'react';\nimport Header from '../../components/Header';\nimport { UPDATE_EXPERT } from '../../graphql/mutations';\nimport useAuth from '../../hooks/useAuth';\nimport AvailabilitySelector from '../../components/AvailabilitySelector';\nvar RegistrationSchema = Yup.object().shape({\n  availability: Yup.array().of(Yup.object({\n    day: Yup.string(),\n    startTime: Yup.string(),\n    endTime: Yup.string(),\n    key: Yup.string()\n  })).min(1).required()\n});\n\nvar Step4 = function Step4() {\n  var _formik$values, _formik$values2, _formik$values2$avail;\n\n  var _useAuth = useAuth(),\n      userData = _useAuth.userData,\n      refetch = _useAuth.refetch;\n\n  var router = useRouter();\n\n  var _useMutation = useMutation(UPDATE_EXPERT),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      updateExpert = _useMutation2[0];\n\n  var formik = useFormik({\n    initialValues: {\n      availability: (userData === null || userData === void 0 ? void 0 : userData.availability) || []\n    },\n    enableReinitialize: true,\n    validationSchema: RegistrationSchema,\n    onSubmit: function onSubmit() {}\n  });\n  var submit = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return updateExpert({\n              variables: {\n                input: {\n                  email: userData === null || userData === void 0 ? void 0 : userData.email,\n                  availability: _toConsumableArray(formik.values.availability)\n                }\n              }\n            });\n\n          case 2:\n            _context.next = 4;\n            return refetch();\n\n          case 4:\n            router.push('/registration/step5');\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), [formik.values, userData, refetch]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Header, {\n      title: \"Tikal 10n1 step3\"\n    }), /*#__PURE__*/_jsx(Container, {\n      children: /*#__PURE__*/_jsxs(Row, {\n        children: [/*#__PURE__*/_jsx(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxs(Card, {\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsx(CardHeader, {\n              className: \"pt-2 px-3\",\n              children: /*#__PURE__*/_jsx(\"h2\", {\n                children: \"Registration Step IV - Choose your availability\"\n              })\n            }), /*#__PURE__*/_jsxs(CardBody, {\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                children: \"Please select at least one available time slot, that you can help someone on them.\"\n              }), /*#__PURE__*/_jsx(AvailabilitySelector, {\n                values: (_formik$values = formik.values) === null || _formik$values === void 0 ? void 0 : _formik$values.availability,\n                onChange: function onChange(value) {\n                  formik.setFieldValue('availability', value);\n                }\n              }), /*#__PURE__*/_jsx(Button, {\n                size: \"lg\",\n                color: \"primary\",\n                disabled: (formik === null || formik === void 0 ? void 0 : (_formik$values2 = formik.values) === null || _formik$values2 === void 0 ? void 0 : (_formik$values2$avail = _formik$values2.availability) === null || _formik$values2$avail === void 0 ? void 0 : _formik$values2$avail.length) === 0,\n                onClick: submit,\n                children: \"Next Step\"\n              })]\n            })]\n          })\n        }), /*#__PURE__*/_jsx(Col, {\n          md: 4,\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsx(\"img\", {\n            src: \"/superHero2.png\",\n            alt: \"Be a 10n1 Super hero\",\n            style: {\n              maxWidth: '75%'\n            }\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport default Step4;","map":null,"metadata":{},"sourceType":"module"}